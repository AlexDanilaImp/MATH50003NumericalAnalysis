# Numerical Analysis

What is numerical analysis?

1. Convergence of algorithms. 
2. Stability of algorithms.


1. Real numbers.
2. Real numbers with errors.
3. Floating point arithmetic. 



The modern world is built on numerical analysis:


1. _FFT_ 
2. _SVD_ 
3. _JPEG_  (Though, in a bizarre twist, GIF, a completely uncompressed format, has made a remarkable comeback.)
4. _PageRank_
5. _Stochastic Gradient Descent_

This is not to say it is purely an applied discipline. It is playing an increasing 

1. Keplar's conjecture.
2. Fefferman

As computer-verified proofs (a la Lean) become increasingly important, the role of numerical analysis in
pure mathematics will also increase, as it provides the theory for rigorously controlling errors in
computations. 


A rough overview of the course is as follows:



In this course we will use the language [Julia](https://julialang.org). This is a modern, compiled, high-level,
open-source language developed at MIT. It is becoming increasingly important in high-performance computing and
AI, including by Astrazeneca and Pfizer in drug development, IBM for medical diagnosis, and MIT for robot
locomotion.

It is ideal for a course on numerical analysis because it both allows
_fast_ implementation of algorithms but also has support for _fast_ automatic-differentiation, a feature 
that is of increasing importance in machine learning. It also is low level enough that we can
really understand what the computer is doing.

It is also easy-to-read and fun to write. 